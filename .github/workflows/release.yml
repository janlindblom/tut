name: Create Release

on:
  push:
    tags:
      - "*"

jobs:
  build_release:
    name: Build Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Install Go dependencies
        run: go install

      - name: Find current version
        run: |
          go build -v -o bin/tut
          echo "::set-output name=version::$(./bin/tut --version | head -1 )"
        id: version

      - uses: actions/download-artifact@v3

      - name: Package Windows binaries
        run: |
          zip -9 -y tut.windows-386.zip tut_386.exe
          zip -9 -y tut.windows-amd64.zip tut_amd64.exe

      - name: Create the release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: upload 386 Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tut.windows-386.zip
          asset_name: tut.windows-386.zip
          asset_content_type: application/zip

      - name: upload amd64 Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./tut.windows-amd64.zip
          asset_name: tut.windows-amd64.zip
          asset_content_type: application/zip
